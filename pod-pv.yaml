apiVersion: v1
kind: Pod
metadata:
  name: pod-pv
spec:
  containers:
  - name: nginx-container
    image: nginx-latest
    volumeMounts:
      - mountPath: /volume-dentro-do-container
        name: primeiro-pv
  volumes:
    - name: primeiro-pv
      persistentVolumeClaim:
        claimName: pvc-1



  # Abrir terminal do Google Cloud Platform
  # copiar o conteúdo desse arquivo para um arquivo lá 
  # kubectl apply -f pod-pv.yaml
  #kubectl get pods
  
# deleta o pod e recria para ver que o volume estará ainda lá
# pois o ciclo de vida é completamente independente dos pods e containers
# pois guarda através do pv e acessar através do pvc




# IMPORTANTE


# Como dito, existem diversos tipos de plugins de volumes que podem ser utilizados pelos Cloud Providers,
# cada um com seu respectivo modo de acesso e nomes. Por exemplo, o GCEPersistentDisk que usamos nos vídeos anteriores,
# permite apenas a criação de um PersistentVolume em modo de ReadWriteOnce ou ReadOnlyMany. Diversas outras informações sobre
# plugins de volumes e modos de acesso podem ser conferidas nesse link da documentação oficial.

# https://kubernetes.io/docs/concepts/storage/persistent-volumes/